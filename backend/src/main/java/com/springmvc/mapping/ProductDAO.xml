<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.ProductDAO">
  <resultMap id="BaseResultMap" type="com.springmvc.dto.Product">
    <id column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="product_no" jdbcType="VARCHAR" property="productNo" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="closed" jdbcType="TINYINT" property="closed" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_id, product_no, product_name, unit, category_id, spec, price, closed, remark, 
    create_at, create_by, update_at, update_by
  </sql>
  <select id="selectByExample" parameterType="com.springmvc.pojo.ProductQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.pojo.ProductQuery">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.dto.Product">
    <selectKey keyProperty="productId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (product_no, product_name, unit, 
      category_id, spec, price, 
      closed, remark, create_at, 
      create_by, update_at, update_by
      )
    values (#{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{spec,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{closed,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.dto.Product">
    <selectKey keyProperty="productId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="closed != null">
        closed,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productNo != null">
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="closed != null">
        #{closed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.pojo.ProductQuery" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.productNo != null">
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.closed != null">
        closed = #{record.closed,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      spec = #{record.spec,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      closed = #{record.closed,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.dto.Product">
    update product
    <set>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="closed != null">
        closed = #{closed,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.dto.Product">
    update product
    set product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      closed = #{closed,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into product
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.productNo != null">
          product_no,
        </if>
        <if test="item.productName != null">
          product_name,
        </if>
        <if test="item.unit != null">
          unit,
        </if>
        <if test="item.categoryId != null">
          category_id,
        </if>
        <if test="item.spec != null">
          spec,
        </if>
        <if test="item.price != null">
          price,
        </if>
        <if test="item.closed != null">
          closed,
        </if>
        <if test="item.remark != null">
          remark,
        </if>
        <if test="item.createAt != null">
          create_at,
        </if>
        <if test="item.createBy != null">
          create_by,
        </if>
        <if test="item.updateAt != null">
          update_at,
        </if>
        <if test="item.updateBy != null">
          update_by,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.productNo != null">
          #{item.productNo,jdbcType=VARCHAR},
        </if>
        <if test="item.productName != null">
          #{item.productName,jdbcType=VARCHAR},
        </if>
        <if test="item.unit != null">
          #{item.unit,jdbcType=VARCHAR},
        </if>
        <if test="item.categoryId != null">
          #{item.categoryId,jdbcType=INTEGER},
        </if>
        <if test="item.spec != null">
          #{item.spec,jdbcType=VARCHAR},
        </if>
        <if test="item.price != null">
          #{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.closed != null">
          #{item.closed,jdbcType=TINYINT},
        </if>
        <if test="item.remark != null">
          #{item.remark,jdbcType=VARCHAR},
        </if>
        <if test="item.createAt != null">
          #{item.createAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createBy != null">
          #{item.createBy,jdbcType=INTEGER},
        </if>
        <if test="item.updateAt != null">
          #{item.updateAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateBy != null">
          #{item.updateBy,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update product
      <set>
        <if test="item.productNo!=null">
          product_no=#{item.productNo,jdbcType=VARCHAR},
        </if>
        <if test="item.productName!=null">
          product_name=#{item.productName,jdbcType=VARCHAR},
        </if>
        <if test="item.unit!=null">
          unit=#{item.unit,jdbcType=VARCHAR},
        </if>
        <if test="item.categoryId!=null">
          category_id=#{item.categoryId,jdbcType=INTEGER},
        </if>
        <if test="item.spec!=null">
          spec=#{item.spec,jdbcType=VARCHAR},
        </if>
        <if test="item.price!=null">
          price=#{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.closed!=null">
          closed=#{item.closed,jdbcType=TINYINT},
        </if>
        <if test="item.remark!=null">
          remark=#{item.remark,jdbcType=VARCHAR},
        </if>
        <if test="item.createAt!=null">
          create_at=#{item.createAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createBy!=null">
          create_by=#{item.createBy,jdbcType=INTEGER},
        </if>
        <if test="item.updateAt!=null">
          update_at=#{item.updateAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateBy!=null">
          update_by=#{item.updateBy,jdbcType=INTEGER},
        </if>
      </set>
      where 
      product_id = #{item.productId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>