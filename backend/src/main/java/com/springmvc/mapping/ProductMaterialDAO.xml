<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.ProductMaterialDAO">
  <resultMap id="BaseResultMap" type="com.springmvc.dto.ProductMaterial">
    <id column="product_material_id" jdbcType="INTEGER" property="productMaterialId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="material_id" jdbcType="INTEGER" property="materialId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="material_property" jdbcType="VARCHAR" property="materialProperty" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    product_material_id, product_id, material_id, quantity, material_property, remark
  </sql>
  <select id="selectByExample" parameterType="com.springmvc.pojo.ProductMaterialQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_material
    where product_material_id = #{productMaterialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product_material
    where product_material_id = #{productMaterialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.pojo.ProductMaterialQuery">
    delete from product_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.dto.ProductMaterial">
    <selectKey keyProperty="productMaterialId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_material (product_id, material_id, quantity, 
      material_property, remark)
    values (#{productId,jdbcType=INTEGER}, #{materialId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, 
      #{materialProperty,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.dto.ProductMaterial">
    <selectKey keyProperty="productMaterialId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="materialProperty != null">
        material_property,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="materialProperty != null">
        #{materialProperty,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.pojo.ProductMaterialQuery" resultType="java.lang.Long">
    select count(*) from product_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_material
    <set>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.materialProperty != null">
        material_property = #{record.materialProperty,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_material
    set product_id = #{record.productId,jdbcType=INTEGER},
      material_id = #{record.materialId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      material_property = #{record.materialProperty,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.dto.ProductMaterial">
    update product_material
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="materialProperty != null">
        material_property = #{materialProperty,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where product_material_id = #{productMaterialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.dto.ProductMaterial">
    update product_material
    set product_id = #{productId,jdbcType=INTEGER},
      material_id = #{materialId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      material_property = #{materialProperty,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where product_material_id = #{productMaterialId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into product_material
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.productId != null">
          product_id,
        </if>
        <if test="item.materialId != null">
          material_id,
        </if>
        <if test="item.quantity != null">
          quantity,
        </if>
        <if test="item.materialProperty != null">
          material_property,
        </if>
        <if test="item.remark != null">
          remark,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.productId != null">
          #{item.productId,jdbcType=INTEGER},
        </if>
        <if test="item.materialId != null">
          #{item.materialId,jdbcType=INTEGER},
        </if>
        <if test="item.quantity != null">
          #{item.quantity,jdbcType=INTEGER},
        </if>
        <if test="item.materialProperty != null">
          #{item.materialProperty,jdbcType=VARCHAR},
        </if>
        <if test="item.remark != null">
          #{item.remark,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update product_material
      <set>
        <if test="item.productId!=null">
          product_id=#{item.productId,jdbcType=INTEGER},
        </if>
        <if test="item.materialId!=null">
          material_id=#{item.materialId,jdbcType=INTEGER},
        </if>
        <if test="item.quantity!=null">
          quantity=#{item.quantity,jdbcType=INTEGER},
        </if>
        <if test="item.materialProperty!=null">
          material_property=#{item.materialProperty,jdbcType=VARCHAR},
        </if>
        <if test="item.remark!=null">
          remark=#{item.remark,jdbcType=VARCHAR},
        </if>
      </set>
      where 
      product_material_id = #{item.productMaterialId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>