<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.ConfigDAO">
  <resultMap id="BaseResultMap" type="com.springmvc.pojo.Config">
    <id column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="config_name" jdbcType="VARCHAR" property="configName" />
    <result column="config_type" jdbcType="INTEGER" property="configType" />
    <result column="config_value" jdbcType="VARCHAR" property="configValue" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    config_id, config_name, config_type, config_value, sort, update_at, update_by
  </sql>
  <select id="selectByExample" parameterType="com.springmvc.pojo.ConfigQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config
    where config_id = #{configId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from config
    where config_id = #{configId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.pojo.ConfigQuery">
    delete from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.pojo.Config">
    <selectKey keyProperty="configId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into config (config_name, config_type, config_value, 
      sort, update_at, update_by
      )
    values (#{configName,jdbcType=VARCHAR}, #{configType,jdbcType=INTEGER}, #{configValue,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{updateAt,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.pojo.Config">
    <selectKey keyProperty="configId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        config_name,
      </if>
      <if test="configType != null">
        config_type,
      </if>
      <if test="configValue != null">
        config_value,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configName != null">
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        #{configType,jdbcType=INTEGER},
      </if>
      <if test="configValue != null">
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.pojo.ConfigQuery" resultType="java.lang.Long">
    select count(*) from config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update config
    <set>
      <if test="record.configName != null">
        config_name = #{record.configName,jdbcType=VARCHAR},
      </if>
      <if test="record.configType != null">
        config_type = #{record.configType,jdbcType=INTEGER},
      </if>
      <if test="record.configValue != null">
        config_value = #{record.configValue,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update config
    set config_name = #{record.configName,jdbcType=VARCHAR},
      config_type = #{record.configType,jdbcType=INTEGER},
      config_value = #{record.configValue,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.pojo.Config">
    update config
    <set>
      <if test="configName != null">
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configType != null">
        config_type = #{configType,jdbcType=INTEGER},
      </if>
      <if test="configValue != null">
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.pojo.Config">
    update config
    set config_name = #{configName,jdbcType=VARCHAR},
      config_type = #{configType,jdbcType=INTEGER},
      config_value = #{configValue,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER}
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into config
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.configName != null">
          config_name,
        </if>
        <if test="item.configType != null">
          config_type,
        </if>
        <if test="item.configValue != null">
          config_value,
        </if>
        <if test="item.sort != null">
          sort,
        </if>
        <if test="item.updateAt != null">
          update_at,
        </if>
        <if test="item.updateBy != null">
          update_by,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.configName != null">
          #{item.configName,jdbcType=VARCHAR},
        </if>
        <if test="item.configType != null">
          #{item.configType,jdbcType=INTEGER},
        </if>
        <if test="item.configValue != null">
          #{item.configValue,jdbcType=VARCHAR},
        </if>
        <if test="item.sort != null">
          #{item.sort,jdbcType=INTEGER},
        </if>
        <if test="item.updateAt != null">
          #{item.updateAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateBy != null">
          #{item.updateBy,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update config
      <set>
        <if test="item.configName!=null">
          config_name=#{item.configName,jdbcType=VARCHAR},
        </if>
        <if test="item.configType!=null">
          config_type=#{item.configType,jdbcType=INTEGER},
        </if>
        <if test="item.configValue!=null">
          config_value=#{item.configValue,jdbcType=VARCHAR},
        </if>
        <if test="item.sort!=null">
          sort=#{item.sort,jdbcType=INTEGER},
        </if>
        <if test="item.updateAt!=null">
          update_at=#{item.updateAt,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateBy!=null">
          update_by=#{item.updateBy,jdbcType=INTEGER},
        </if>
      </set>
      where 
      config_id = #{item.configId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>