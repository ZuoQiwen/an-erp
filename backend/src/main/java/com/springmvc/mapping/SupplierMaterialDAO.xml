<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.SupplierMaterialDAO">
  <resultMap id="BaseResultMap" type="com.springmvc.pojo.SupplierMaterial">
    <id column="supplier_material_id" jdbcType="INTEGER" property="supplierMaterialId" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="material_id" jdbcType="INTEGER" property="materialId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    supplier_material_id, supplier_id, material_id, price, remark
  </sql>
  <select id="selectByExample" parameterType="com.springmvc.pojo.SupplierMaterialQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplier_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supplier_material
    where supplier_material_id = #{supplierMaterialId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supplier_material
    where supplier_material_id = #{supplierMaterialId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springmvc.pojo.SupplierMaterialQuery">
    delete from supplier_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springmvc.pojo.SupplierMaterial">
    insert into supplier_material (supplier_material_id, supplier_id, material_id, 
      price, remark)
    values (#{supplierMaterialId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, #{materialId,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springmvc.pojo.SupplierMaterial">
    insert into supplier_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierMaterialId != null">
        supplier_material_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierMaterialId != null">
        #{supplierMaterialId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springmvc.pojo.SupplierMaterialQuery" resultType="java.lang.Long">
    select count(*) from supplier_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplier_material
    <set>
      <if test="record.supplierMaterialId != null">
        supplier_material_id = #{record.supplierMaterialId,jdbcType=INTEGER},
      </if>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=INTEGER},
      </if>
      <if test="record.materialId != null">
        material_id = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplier_material
    set supplier_material_id = #{record.supplierMaterialId,jdbcType=INTEGER},
      supplier_id = #{record.supplierId,jdbcType=INTEGER},
      material_id = #{record.materialId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.pojo.SupplierMaterial">
    update supplier_material
    <set>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where supplier_material_id = #{supplierMaterialId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springmvc.pojo.SupplierMaterial">
    update supplier_material
    set supplier_id = #{supplierId,jdbcType=INTEGER},
      material_id = #{materialId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR}
    where supplier_material_id = #{supplierMaterialId,jdbcType=INTEGER}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into supplier_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].supplierMaterialId!=null">
        supplier_material_id,
      </if>
      <if test="list[0].supplierId!=null">
        supplier_id,
      </if>
      <if test="list[0].materialId!=null">
        material_id,
      </if>
      <if test="list[0].price!=null">
        price,
      </if>
      <if test="list[0].remark!=null">
        remark,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.supplierMaterialId!=null">
          #{item.supplierMaterialId,jdbcType=INTEGER},
        </if>
        <if test="item.supplierId!=null">
          #{item.supplierId,jdbcType=INTEGER},
        </if>
        <if test="item.materialId!=null">
          #{item.materialId,jdbcType=INTEGER},
        </if>
        <if test="item.price!=null">
          #{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.remark!=null">
          #{item.remark,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      update supplier_material
      <set>
        <if test="item.supplierId!=null">
          supplier_id=#{item.supplierId,jdbcType=INTEGER},
        </if>
        <if test="item.materialId!=null">
          material_id=#{item.materialId,jdbcType=INTEGER},
        </if>
        <if test="item.price!=null">
          price=#{item.price,jdbcType=DECIMAL},
        </if>
        <if test="item.remark!=null">
          remark=#{item.remark,jdbcType=VARCHAR},
        </if>
      </set>
      where 
      supplier_material_id = #{item.supplierMaterialId,jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>